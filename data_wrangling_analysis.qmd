---
title: "agreement_height_predicted_height"
author: "Eric Anku"
format: html
---

```{r load-packages}
pacman::p_load(
  tidyverse, # Data manipulation
  googlesheets4, # Import dataset from google sheet
  janitor, # Clean column names
  skimr, # Skim dataset
  gtsummary, # Table summaries
  finalfit, # Column labels
  here, # File management
  rio, # Export dataset
  blandr # Bland altman analysis
)
```

```{r read-sheet}
df <- read_sheet("https://docs.google.com/spreadsheets/d/1mgVVPCekW4kCA9Ww7luuITB4sXdEI3VFg6KcK7UNFV8/edit?usp=sharing")
```

```{r clean-names}
# Clean names
df <- clean_names(df)
```

```{r extract-column-names}
# Extract column names starting with data_
data_cols <- names(df)[grepl("^data_", names(df))]

extracted_part <- substr(data_cols, 6, nchar(data_cols))

# Replace existing column names with new extracted names
names(df)[grepl("^data_", names(df))] <- extracted_part
```


```{r remove-redundant-columns}
df <- df%>%
  select(-c(
    meta_instance_id,
    date,
    consent_form,
    predictive_height1,
    predictive_height2,
    predictive_height3,
    predictive_height4
  ))
```

```{r mutate-predicted-height}
# Mutate predicted height using Elia equation

predicted_height <- case_when(
      # Predicted height for males
      df$gender == "male" ~ ifelse (df$age < 65, 
                   79.2 + (3.60 * df$mean_ulna),
                   86.3 + (3.15 * df$mean_ulna)),
      # Predicted height for females
      df$gender == "female" ~ ifelse (df$age < 65, 
                     95.6 + (2.77 * df$mean_ulna),
                     80.4 + (3.25 * df$mean_ulna)),
      TRUE ~ NA_real_
    )
```

```{r add-predicted-height-to-df}
# Add predicted height to dataset
df$predicted_height <- predicted_height
```

```{r bland-altman-analysis}
blandr.statistics ( df$mean_height, df$predicted_height , sig.level=0.95 )
```

```{r bland-plot}
blandr.draw( df$mean_height , df$predicted_height )
```

```{r scatter-plot}
ggplot(df, aes(mean_height, predicted_height)) +
  geom_point() +
  geom_smooth(method = "lm")
```

```{r correlation}
cor.test(df$mean_height, df$predicted_height)
```

